{"version":3,"sources":["App.js","index.js"],"names":["squares","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","start","points","pattern","click","compTurn","score","name","startGame","bind","assertThisInitialized","e","need","length","console","log","setState","buildPattern","endGame","document","getElementById","style","animation","pat","1","2","3","4","Math","floor","random","animate","btns","_this2","_loop","btn","window","setTimeout","x","getComputedStyle","getPropertyValue","backgroundColor","clearColor","colors","children","i","temp","found","prompt","slice","push","_this3","react_default","a","createElement","className","id","index_es","variant","color","onClick","map","c","key","handleClick","indx","Component","withStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.707cbfb8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ExpansionPanel, ExpansionPanelSummary, \n  ExpansionPanelDetails, Typography, Button} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';  \nimport './App.css';\n\nconst squares = ['g','r','y','b'];\nlet interval;\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      start:0,\n      points:0,\n      pattern:'',\n      click:0,\n      compTurn:0,\n      score:[\n        {'name':'Kev','score':15},\n        {'name':'Bil','score':10},\n        {'name':'Sal','score':3},\n        {'name':'Mik','score':2},\n        {'name':'Haw','score':1}\n      ]\n    };\n    this.startGame = this.startGame.bind(this);\n    //this.endGame = this.endGame.bind(this);\n  }\n\n  handleClick(e) \n  {\n    if(this.state.start && !this.state.compTurn)\n    {\n      let need = this.state.pattern.length;//click/actions needed to level up\n\n      if(e===this.state.pattern[this.state.click])//if matches the pattern\n      {\n        console.log('pass');\n        if(this.state.click===need-1)//advance to the next level\n        {\n          console.log('new level');\n          this.setState({\n            click:0,\n            points:this.state.points+1,\n          });\n          this.buildPattern();\n        }\n        else  \n        {\n          this.setState({click:this.state.click+1});\n        }\n      }\n      else\n      {\n        this.endGame();\n      }\n    }\n    else\n    {\n      console.log('Press Start!');\n    }\n  }\n\n  startGame()\n  {\n    document.getElementById('container').style.animation = 'none';\n    this.setState({start:1});\n    this.buildPattern();\n  }\n\n  buildPattern()//or I could build the entire pattern from the GET-ko\n  {\n    let boxes = {1:'g',2:'r',3:'y',4:'b'};\n    let pat = this.state.pattern;\n    let rand = Math.floor(Math.random() * 4) + 1;//get a random #\n    pat += boxes[rand];\n    this.setState({\n      pattern:pat,\n    });\n    this.animate(pat);\n    //interval = setInterval(this.animate(pat),8000);\n\n  }\n\n  animate(btns)//\n  {\n    console.log(btns);\n\n    for(let btn=0;btn<btns.length;btn++)\n    {\n      //this.clearColor();\n      window.setTimeout(()=>\n      {\n        let x = document.getElementById(btns[btn]);\n        let color = window.getComputedStyle(x).getPropertyValue('background-color');\n        x.style.backgroundColor='black';\n        //x.style.backgroundColor = color;\n        setTimeout(()=>\n        {\n          this.clearColor()\n        },300)\n      },1000*btn); \n    }\n    //clearInterval(interval);\n  }\n\n  clearColor()\n  {\n    let colors = ['limegreen','red','yellow','blue'] \n    let children = document.getElementById('container').children;\n    for(let i=0; i<4; i++)\n    {\n      //console.log(children[x])\n      children[i].style.backgroundColor = colors[i];\n    }\n  }\n\n  endGame()\n  {\n    console.log('lose');\n    let temp=[];\n    let found = 0;\n    for(let i=0;i<this.state.score.length;i++)\n    {\n      //if big score found, enter it once and only once it's found\n      if(this.state.points>=this.state.score[i].score && !found)\n      {\n        let name=window.prompt('New High Score - Enter your initials!')\n        if(name.length===0)\n        {\n          name = 'P1';\n        }\n        else\n        {\n          name = name.slice(0,3)\n        }\n        temp.push({\n          'name':name,\n          score:this.state.points\n        })\n        found=1\n      }\n      else\n      {\n        temp.push(this.state.score[i])\n      }\n    }\n    this.setState({\n      points:0,\n      click:0,\n      start:0,\n      pattern:'',\n      score:temp,\n    });\n  }\n  \n  render() {\n    return (\n      <div>\n        <h2 className='txt'>Match the colors & test your memory!</h2>\n        {\n          this.state.start\n          ?\n          <div>&nbsp;&nbsp;&nbsp;&nbsp;Points:&nbsp;{this.state.points}</div>\n          :\n          <div id='start'>\n            <Button variant='contained' color='primary' \n              onClick={this.startGame}\n            >\n            Press to Start!</Button>\n          </div>\n        }\n        <br/><br/><br/>\n        <div id='container'>\n          {\n            squares.map((c)=>\n              <div className='content' id={c} key={c}\n                onClick={()=>\n                  {\n                    this.handleClick(c);\n                  }}\n              ></div>\n              )\n          }\n        </div>\n        <div id='bottom'>\n        <ExpansionPanel id='scores'>\n          <ExpansionPanelSummary>\n            High Scores\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <table id='scores'>\n            <thead>\n              <tr><th>Rank</th><th>Name</th><th>Score</th></tr>\n            </thead>\n            <tbody>\n            {\n              this.state.score.map((x,indx)=>\n                <tr key={indx+1}>\n                  <td>{indx+1}</td><td>{x.name}</td><td>{x.score}</td> \n                </tr>\n              )\n            }\n            </tbody>\n            </table>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}